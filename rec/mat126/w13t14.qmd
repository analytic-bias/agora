---
jupyter: python3
include-in-header:
  text: |
    <script src="alignmargin.js"></script>
format:
  html:
    css: styles.css
    code-fold: true
    code-block-border-left: true
---

# Week 13--14
Since these homeworks would better be explained in terms of interactive figures, I've put them in a web format which you can use directly from browser.

:::: {.aside}
::: {.opbullet}
- This checkmark symbolizes an optional content in the current course; you may skip them if you're not interested.
:::
::: {.wabullet}
- The responsive layout on mobile portrait might not be as polished; if content is overlapped thus unintelligible, please rotate device to landscape.
:::
::::

## HW 10.7 - SCalcCC5 6.2.014. {#sec-hw10d7}
Consider the solid obtained by rotating the region bounded by the given curves about the line $y = 3$.
$$y=\underbrace{3x}_{\substack{f_1(x)\\\uparrow\\\text{outer}}}\quad y=\underbrace{3\sqrt{x}}_{\substack{f_2(x)\\\uparrow\\\text{inner}}}$$
Find the volume V of this solid.

### Solution
Recall that the area of the annulus at $x$ (where $0\leq x\leq1$) is
$$A(x)=\pi\big[f_1(x)-y_0\big]^2-\pi\big[f_2(x)-y_0\big]^2$$
and that the volume is
$$V=\int_a^bA(x)\,\mathrm{d}x,$$
which in our case are

:::: {.compensate-above}
$$
\begin{aligned}
A(x)&=\pi(3 x-3)^2-\pi(3 \sqrt{x}-3)^2 \\
& =9 \pi\left[\left(1-2 x+x^2\right)-(1-2 \sqrt{x}+x)\right] \\
& =9 \pi\left(-3 x+x^2+2 \sqrt{x}\right)\text{; and}\\\\
V&=\int_0^{1} A(x)\,\mathrm{d}x\class{alref}{\cssId{alref1}{}}\\
&=9 \pi \int_0^1\left(-3 x+x^2+2 \sqrt{x}\right)\,\mathrm{d}x\\
& =9 \pi\left[-\frac{3}{2} x^2+\frac{1}{3} x^3+\frac{4}{3} x^{3 / 2}\right]_0^1\\
&=9 \pi\left(-\frac{3}{2}+\frac{5}{3}\right)=\frac{3}{2} \pi.
\end{aligned}
$$

::: {#almar1 .wabullet .column-margin .almar .compensate-above}
- WebAssign's solution has a typo on this line.
:::
::::

<!-- <details>
  <summary><i>WebAssign answers (with typo)</i></summary>
  <object data="https://www.webassign.net/latex2pdf/55cf5565f7021a0121f1a755234fe118.pdf" width="600" height="600"/>
</details> -->

### Sketch
Sketch the region, the solid, and a typical disk or washer. (Do this on paper. Your instructor may ask you to turn in this work.)
[Mathematicians usually call them annuli (sing. annulus), not washers.]{.aside}

:::: {#fig-hw10-7 .fullwidth .column-page-right layout-ncol=2}
```{python}
#| echo: false
import plotly.graph_objects as go
import plotly.io as pio
import numpy as np

# Define the sampling range for x
x = np.linspace(0, 1, 100)

# Define the values of samples for the outer and inner curves
outer_curve = 3 * x
inner_curve = 3 * np.sqrt(x)

# Definethe sampling range of angles for revolving the curves
theta = np.linspace(0, 2 * np.pi, 100)

# Create grid of values for X, Y, Z for the outer surface plot
X_outer, T_outer = np.meshgrid(x, theta)
Y_outer = np.cos(T_outer) * (outer_curve - 3) + 3  # Revolving around y=3
Z_outer = np.sin(T_outer) * (outer_curve - 3)

# Create grid of values for X, Y, Z for the inner surface plot
X_inner, T_inner = np.meshgrid(x, theta)
Y_inner = np.cos(T_inner) * (inner_curve - 3) + 3  # Revolving around y=3
Z_inner = np.sin(T_inner) * (inner_curve - 3)

# Create 3D surface plots for both the outer and inner surfaces
outer_surface = go.Surface(x=X_outer, y=Y_outer, z=Z_outer, opacity=0.4, name='outer surface', colorscale='Blues')
inner_surface = go.Surface(x=X_inner, y=Y_inner, z=Z_inner, opacity=0.9, name='inner surface', colorscale='Reds')

# Create the layout for the plot
layout = go.Layout(
    scene=dict(
        xaxis_title='X',
        yaxis_title='Y',
        zaxis_title='Z'
    ), autosize=True
)

# Show the figure, suppressing the extra color saturation axis
fig = go.Figure(data=[outer_surface, inner_surface], layout=layout)
fig.update_traces(showscale=False)
fig.update_layout(margin=dict(
        l=0,
        r=0,
        b=0,
        t=0,
        pad=0))
fig.show()
```

```{python}
#| fig-cap: "Plot of $y=3x$ and $y=3\\sqrt{x}$ with area between curves from $x=0$ to $x=1$"
#| echo: false

%matplotlib inline
import matplotlib_inline
matplotlib_inline.backend_inline.set_matplotlib_formats('svg')

import matplotlib.pyplot as plt
import numpy as np

# Define the range for x
x = np.linspace(0, 1, 200)
x_sqrt = np.linspace(0, 1, 200)

# Define the functions
y1 = 3 * x
y2 = 3 * np.sqrt(x_sqrt)

# Plotting the functions
plt.figure(figsize=(6, 6))
plt.plot(x, y1, label='$3x$', color='blue')
plt.plot(x_sqrt, y2, label='$3\sqrt{x}$', color='red')

# Filling the area between the curves
plt.fill_between(x, y1, y2, where=(x >= 0) & (x <= 1), color='green', alpha=0.3)

# Adding labels and title
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.grid(True)

# Show the plot
plt.show()
```

Figures for HW 10.7 - SCalcCC5 6.2.014.
::::

## HW 10.10 - SCalcCC5 6.3.025. {#sec-hw10d10}
<style>
  .compensate-above-2cm {
    margin-top: -2cm;
  }
</style>

Consider the following.
$$
x=4 \sqrt{\sin (y)}, \quad 0 \leq y \leq \pi, \quad x=0;\quad \text { about } y=4
$$

### (a)
Set up an integral for the volume of the solid obtained by rotating the region bounded by the given curve about the specified axis.

#### Solution
:::: {}
$$
\begin{aligned}
\class{alref}{\cssId{alref2}{\phantom{.}}}
A(y)&=\underbrace{2\pi(4-y)}_{\text{circumference}} \cdot \underbrace{4\sqrt{\sin (y)}}_{\text{height}},\,\text{and thus}\\
V&=\int_0^{\pi} 2 \pi(4-y) 4 \sqrt{\sin (y)}\,\mathrm{d}y.\\\\
\end{aligned}
$$

::: {#almar2 .aside .almar}
$\leftarrow$ area of the red cylinder at y

- When to use cylindrical shells or annuli?
  + the line around which the region is rotated is parallel to the axis of the independent variable $\rightarrow$ annuli (@sec-hw10d7);
  + the line is orthogonal to the axis $\rightarrow$ cylinders (@sec-hw10d10).
:::
::::

:::: {#fig-hw10-10 .fullwidth .column-page-right layout-ncol=2}
```{python}
#| echo: false
import plotly.graph_objects as go
import numpy as np

y = np.linspace(0, np.pi, 100)
curve = 4 * np.sqrt(np.sin(y))
theta = np.linspace(0, 2 * np.pi, 100)
X_curve, T_curve = np.meshgrid(curve, theta)
Y_curve = np.cos(T_curve) * (y - 4) + 4
Z_curve = np.sin(T_curve) * (y - 4)

x = np.linspace(-1, 5, 100)
X_line, T_line = np.meshgrid(x, theta)
Y_line = 3 * np.cos(T_line) + 4
Z_line = 3 * np.sin(T_line)

curve_surface = go.Surface(x=X_curve, y=Y_curve, z=Z_curve, opacity=0.9, name='revolved curve', colorscale='Blues')
line_surface = go.Surface(x=X_line, y=Y_line, z=Z_line, opacity=0.4, name='cylinder (extended)', colorscale='Reds')

layout = go.Layout(
    # title=r"$x=4\sqrt{\sin y},\,\text{revolved around}\,y=4,\,\text{from}\,x=0\,\text{to}\,x=4$",
    scene=dict(
        xaxis_title='X',
        yaxis_title='Y',
        zaxis_title='Z'
    ),
    autosize=True
)
fig = go.Figure(data=[curve_surface, line_surface], layout=layout)
fig.update_traces(showscale=False)
fig.update_layout(margin=dict(
        l=0,
        r=0,
        b=0,
        t=0,
        pad=0))
fig.show()
```

```{python}
#| fig-cap: "Plot of $x=4\\sqrt{\\sin y}$ and $y=4$ with area between curves from $y=0$ to $y=\\pi$"
#| echo: false

%matplotlib inline
import matplotlib_inline
matplotlib_inline.backend_inline.set_matplotlib_formats('svg')

import matplotlib.pyplot as plt
import numpy as np

# Define the range for x
x = np.linspace(0, 4, 200)
x_sqrt = np.linspace(0, np.pi, 200)

# Define the functions
y1 = 0 * x + 4
y2 = 4 * np.sqrt(np.sin(x_sqrt))

# Plotting the functions
plt.figure(figsize=(6, 6))
plt.plot(y1, x, label='$y=4$', color='blue')
plt.plot(x_sqrt, y2, label='$x=4\sqrt{\sin y}$', color='red')

# Filling the area between the curves
plt.fill_between(x_sqrt, x_sqrt * 0, y2, where=(x >= 0) & (x <= 4), color='green', alpha=0.3)

# Adding labels and title
plt.xlabel('y')
plt.ylabel('x')
plt.legend()
plt.grid(True)

# Show the plot
plt.show()
```

Figures for HW 10.10 - SCalcCC5 6.3.025.
::::

### (b)
Use technology to evaluate the integral. (Round your answer to four decimal places.)

#### Solution
For the numerical integration, we can use `scipy`:

::: {.aside .opbullet}
* The anti-derivative is non-elementary. If you're really curious, you can start from [here](https://math.stackexchange.com/questions/3906193/completely-stuck-at-integrating-%24%5Cint-x%5Csqrt%7B%5Ccos-x%7D%5C%2Cdx%24); you may notice that it will be much more complicated than the $x^n\tan x$ some of you asked a while ago.
:::
```{python}
#| echo: true
#| code-fold: false

import numpy
import scipy
round(scipy.integrate.quad(lambda y:
  2 * numpy.pi * (4 - y) *
    4 * numpy.sqrt(numpy.sin(y)),
  0, numpy.pi)[0],
4)
```
or whatever "technology" you'd prefer.

## Recall - Arc Length
:::: {.compensate-below}
::: {.aside .opbullet}
* Beware of conditions for the existence of inverse.
* The condition for this is that the parameterization $$r(t)=\Big(x(t),y(t)\Big)$$ has to be injective and continuously differentiable.
* In case you want to know, the norm $\left\|{r}^{\prime}(t)\right\|$ here is given by a [metric tensor](https://en.wikipedia.org/wiki/Metric_tensor), which, if you intend to study e.g. the theory of relativity, will be encountered again.
:::
$$
\begin{array}{rcl}
f(x(t)) & = & g(y(t))\\
\leadsto\quad
x(t)=f^{-1}(t) &\text{and}& y(t)=g^{-1}(t)\\
\end{array}
$$
$$
L=\int_a^b\Big\|{r}^{\prime}(t)\Big\|\,\mathrm{d}t=
\int_a^b \sqrt{\left(x^{\prime}(t)\right)^2+\left(y^{\prime}(t)\right)^2}\,\mathrm{d}t
$$
::::

## HW11.6 - SCalcCC5 6.4.017.MI.
Find the exact length of the curve. 
$$y^2=16(x+1)^3, 0 \leq x \leq 3, y>0$$

### Solution

$$\begin{aligned}
y>0\implies\quad&
y(t)=\sqrt{t}\\
0\leq x\implies\quad&x(t)=\sqrt[3]{\frac{1}{16}t}-1\\
\,0 \leq x \leq 3\implies\quad&\text{with bounds from }t=16\text{ to }t=16\cdot4^3\\\\
\implies\quad&\left\{\begin{aligned}
y'(t)&=\frac{t^{-½}}{2}\\x'(t)&=\frac{2^{-⅓}}{6}t^{-⅔}\\
\end{aligned}\right.\\\\
\implies\quad&
\left\{\begin{aligned}
\text{length}&=\int_{16}^{16\cdot4^3}\sqrt{\left(\frac{t^{-½}}{2}\right)^2+\left(\frac{2^{-⅓}}{6}t^{-⅔}\right)^2}\,\mathrm{d}t\\
&=\cdots=\frac{-37 \sqrt{37} + 145 \sqrt{145}}{54}.
\end{aligned}\right.
\end{aligned}$$

## HW11.7 - SCalcCC5 6.4.021.
Find the exact length of the curve.
$$
\begin{aligned}
x &= 9 + 12t^2\\
y &= 6 + 8t^3\\
0 &\leq t \leq 5 
\end{aligned}
$$

::: {.aside}
Again,
$$
L=\int_a^b \sqrt{\left(x^{\prime}(t)\right)^2+\left(y^{\prime}(t)\right)^2}\,\mathrm{d}t;
$$
but sometimes, when the curve is given in the form of $y=f(x)$, i.e. $y(t)=t$, one may reduce the above to
$$
L=\int_a^b \sqrt{1+\left(y'(x)\right)^2}\,\mathrm{d}x.
$$
:::

## Miscellanies
::: {.callout-tip collapse="true"}
## Optionally, these were the excursions we briefly chatted about before the Thanksgiving...
On rectification, measuring, pathologies; probably no time to code something original, but wikipedia:

<img src="https://upload.wikimedia.org/wikipedia/commons/7/7c/Hilbert-curve_rounded-gradient-animated.gif" width="100%" />

<img src="https://upload.wikimedia.org/wikipedia/commons/2/2d/Quadrat_Diagonale.svg" width="100%" />

### Schwarz's Lantern {#sec-schwarzlantern}

<img src="https://upload.wikimedia.org/wikipedia/commons/2/20/Schwarz-lantern.gif" width="100%" />

- recall the discussion we had about Riemann sums; can you try to play with the above and see if you can make the same observation as the pioneers of measure theory did a century ago?
- https://www.wikiwand.com/en/Lebesgue_measure
- https://www.wikiwand.com/en/Minkowski_content
- Hilbert's curve above
- Banach-Tarski
- locales, cardinals
- fractals, dimensions, GMT
:::
